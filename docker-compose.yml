services:
  mirai-api:
    container_name: mirai-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 5001:5001
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ~/.microsoft/usersecrets:/root/.microsoft/usersecrets:ro
    depends_on:
      mirai-db:
        condition: service_healthy

  mirai-db:
    container_name: mirai-db
    image: ankane/pgvector:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mirai
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mirai"]
      interval: 5s
      timeout: 5s
      retries: 5

  mirai-idp:
    container_name: mirai-idp
    image: quay.io/keycloak/keycloak:latest
    command: start-dev --import-realm
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
    volumes:
      - keycloak_data:/opt/jboss/keycloak/standalone/data
      - ./.files/mirai-realm-export.json:/opt/keycloak/data/import/realm.json
    ports:
      - 18080:8080

  mirai-seq:
    container_name: mirai-seq
    image: datalust/seq:latest
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:5341
      - 8081:80

  mirai-redis:
    container_name: mirai-redis
    image: redis:latest
    restart: always
    ports:
      - 6379:6379

  mirai-language-api:
    container_name: mirai-language-api
    build:
      context: ../mirai-language-api
      dockerfile: Dockerfile
    environment:
      - ENVIRONMENT=development
    ports:
      - 8000:8000

volumes:
  postgres_data:
  keycloak_data:
